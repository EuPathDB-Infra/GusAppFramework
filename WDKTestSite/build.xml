<?xml version="1.0"?>
<project name="WDK temp build" default="deploy" basedir=".">
	
  <target name="start">
    <tstamp/>
    <available file="${basedir}/local.properties" 
           property="local.properties.available"/>
  </target>
	                                                                                           
  <target name="properties-local" 
          if="local.properties.available" 
          depends="start">
    <echo message="Loading local properties file"/>
    <property file="${basedir}/local.properties"/>
  </target>
	                                                                                           
  <target name="properties" 
          depends="start,properties-local">
    <echo message="Loading build properties file"/>
    <property file="build.properties"/>
  </target>
	
  <property name="build.home"    value="${basedir}/ant-build"/>
  <property name="src.home"      value="${basedir}/src/java"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>



  <path id="compile.classpath">

    <!-- <pathelement location="${catalina.home}/common/classes"/> -->
    <fileset dir="${basedir}/lib/java">
      <include name="*.jar"/>
    </fileset>

  </path>


<!--  <target name="all" depends="clean,compile"
   description="BROKEN Clean build and dist directories, then compile"/> -->


  <target name="realclean"
   description="BROKEN Delete old build and dist directories" depends="properties">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
    <delete dir="${webapp.dir}"/>
  </target>


  <target name="compile" depends="prepare"
   description="Compile Java sources">

    <!-- Compile Java classes as necessary -->
    <mkdir dir="${build.home}/classes"/>
    <javac srcdir="${src.home}"
          destdir="${build.home}/classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}">
        <classpath refid="compile.classpath"/>
    </javac>

    <!-- Copy application resources -->
    <copy  todir="${build.home}/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>

  </target>

  <target name="deploy" depends="prepare"
   description="Deploy to webapp directory">

    <!-- Compile Java classes as necessary -->
    <mkdir dir="${build.home}/site"/>

  	
  	<ant antfile="../WebDevKit/build.xml" inheritAll="false" />
  	
    <!-- Copy application resources -->
    <copy todir="${build.home}/webapp/WEB-INF">
      <fileset dir="${basedir}/webinf" />
    </copy>

    <copy todir="${build.home}/webapp/">
      <fileset dir="${basedir}/docroot" />
    </copy>
      
    <copy todir="${build.home}/webapp/WEB-INF/lib">
    	<fileset dir="../WebDevKit/lib/java" 
    		includes="commons-digester-1.5.jar,
    			ojdbc14.jar,
    			commons-beanutils.jar,
    			commons-cli-1.0.jar
    			jstl.jar,
    		    pager-taglib.jar,
    			standard.jar,
         		jing-20030619.jar,
    			commons-dbcp-1.1.jar,
    			commons-pool-1.1.jar" />
    </copy>

    
  <copy todir="${build.home}/webapp/WEB-INF/lib">
  	<fileset dir="${basedir}/lib/java" 
  		includes="pager-taglib.jar" />
  </copy>
  	
  	<copy todir="${build.home}/webapp/WEB-INF/lib" 
  		  file="../WebDevKit/ant-build/GUS-WebDevKit.jar"/>
  	
    <copy todir="${gus.home}/lib/xml"> 
      <fileset dir="lib/xml" includes="*.xml" />
  	</copy>
  	
  	<mkdir dir="${build.home}/webapp/WEB-INF/wdk-config" />
  	<copy tofile="${build.home}/webapp/WEB-INF/wdk-config/toyModel.xml" 
  		  file="${basedir}/lib/xml/toyModel.xml"/>
  	<copy tofile="${build.home}/webapp/WEB-INF/wdk-config/sampleModel.prop" 
  		  file="${basedir}/lib/macro.props"/>
    <copy tofile="${build.home}/webapp/WEB-INF/wdk-config/modelConfig.xml" 
		  file="${basedir}/lib/login.xml.d1pat"/>
    <copy tofile="${build.home}/webapp/WEB-INF/wdk-config/wdkModel.rng" 
	      file="../WebDevKit/lib/rng/wdkModel.rng"/>
  	<mkdir dir="${webapp.dir}"/>
    <copy todir="${webapp.dir}">
      <fileset dir="${basedir}/ant-build/webapp" />
    </copy>
  </target>



  <target name="package" depends="compile"
   description="Create JAR file">

    <!-- Create application JAR file -->
    <jar jarfile="${build.home}/wdk.jar"
         basedir="${build.home}/classes/"/>

    <!-- Copy additional files to ${dist.home} as necessary -->

  </target>


  <target name="javadoc" depends="compile"
   description="Create Javadoc API documentation">

    <mkdir dir="${build.home}/docs/api"/>
    <javadoc sourcepath="${src.home}"
                destdir="${build.home}/docs/api"
           packagenames="*">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>


  <target name="prepare" depends="properties">

    <!-- Create build directories as needed -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/WEB-INF"/>
    <mkdir  dir="${build.home}/WEB-INF/classes"/>


    <!-- Copy static content of this web application -->
<!--
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>
-->
    <!-- Copy external dependencies as required -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
    <mkdir  dir="${build.home}/WEB-INF/lib"/>
<!--
    <copy todir="${build.home}/WEB-INF/lib" file="${foo.jar}"/>
-->

    <!-- Copy static files from external dependencies as needed -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

  </target>


</project>
