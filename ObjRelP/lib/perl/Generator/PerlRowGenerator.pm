package GUS::ObjRelP::Generator::PerlRowGenerator;

@ISA = qw (GUS::ObjRelP::Generator::RowGenerator);

use strict;

sub new{
    my ($class, $generator, $schemaName, $tableName, $tableGenerator) = @_;
    
    my $self=GUS::ObjRelP::Generator::RowGenerator->new($generator, $schemaName, $tableName, $tableGenerator);
    bless $self, $class;
    return $self;
}

sub generate {
  my($self, $newOnly) = @_;

  my $dir = $self->{generator}->{targetDir};

  my $file = "$dir/$self->{schemaName}/$self->{tableName}_Row.pm";

  return if ($newOnly && -e $file);

  open(F,">$file") || die "Can't open file $file for writing";
  print F $self->_genHeader() . $self->_genSetDefaultParams() .
    $self->_genAccessors() . "1;\n";
  close(F);
}

sub _genHeader {
    my ($self) = @_;
    
    my $temp =
	"package GUS::Model::$self->{fullName}_Row;

# THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
# PACKAGE.
#
# DO NOT EDIT!!

use strict;
";
    my $parentPkg;
    if ($self->_getParentTable()) {
	$parentPkg = $self->_getParentTable();
    } else {
	$parentPkg = "GUS::Model::GusRow";
    }
    
    $temp .= "use $parentPkg;\n";
    $temp .= $self->_genISA();

    return $temp;
}

sub _genISA {
    my ( $self ) = @_;
    
    my $parent = $self->_getParentTable();
    my $isa = '@ISA = qw (GUS::Model::GusRow);';
  $isa = "\@ISA = qw ($parent);" if $parent;
    return "
use vars qw (\@ISA);
$isa

";
}

sub _genSetDefaultParams {
    my( $self) = @_;
    my $temp;
    
    $temp .= 
	'sub setDefaultParams {
  my ($self) = @_;
  $self->setVersionable(';
    
    $temp .= $self->_getVersionable();
    
    $temp .= ');
  $self->setUpdateable(1);
}

';
    
    return $temp;
}

sub _genAccessors {
    my ($self) = @_;
    
    my $temp;
    
    foreach my $att ($self->_getUniqueAttributes()) {
	
	my $sub_name = $self->_capAttName( $att );
	my $set = "set$sub_name";
	my $get = "get$sub_name";
	
	##don't create methods if base classes have them...
	my $dontOverride = $self->{generator}->getDontOverride();
	next if ($dontOverride->{$set} || $dontOverride->{$get});
	
	## print the set and gets with some pod commenting.
	$temp .= "sub $set {
  my(\$self,\$value) = \@_;
  \$self->set(\"$att\",\$value);
}

sub $get {
    my(\$self) = \@_;
  return \$self->get(\"$att\");
}\n\n";
  }

  return $temp;
}

1;
