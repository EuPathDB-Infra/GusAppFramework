package org.gusdb.model.SRes;

import java.util.*;
import java.sql.*;
import org.gusdb.objrelj.*;

/** 
 * Taxon.java
 *
 * Created: Fri Apr 25 09:43:42 EDT 2003
 *
 * @author Jonathan Crabtree
 * @version $Release$ $Date$ $Author$
*/

public class Taxon extends Taxon_Row {
    
	public Taxon(){};
    
    // Constructor that creates a new GUSRow that is not in the database but can be submitted there.
    public Taxon(ServerI server, String sessionId){
	super(server, sessionId);
    }



    /**
     * Retrieve the TaxonName entry with the specified name_class (e.g. "scientific name")
     * from the database (if not already in memory.)
     */
    public String getTaxonName(ServerI server, String session, String name_class) {

	try {
	    Vector allTaxonNames = getTaxonNameList(false);
	}
	catch(Exception e){
	    System.err.println(e.getMessage());
	    e.printStackTrace();
	}
	
	return this.getTaxonName(name_class);
    }

    /**
     * Retrieve the TaxonName entry with the specified name_class (e.g. "scientific name").
     * Does NOT query the database.
     */
    public String getTaxonName(String name_class) {
	if (name_class == null) throw new IllegalArgumentException();

	// TO DO - there should be a method in GUSRow that returns only the children
	// of a specified class.
	//
	Vector kids = null;
	try {

	    kids = this.getTaxonNameList(true);
	}
	catch (Exception e){
	    System.err.println(e.getMessage());
	    e.printStackTrace();
	}
	int nk = kids.size();
	
	for (int i = 0;i < nk;++i) {
	    TaxonName tn = (TaxonName)(kids.elementAt(i));
	    if (tn.getNameClass().equals(name_class)) {
		return tn.getName();
	    }
	}
	return null;
    }

} // Taxon
