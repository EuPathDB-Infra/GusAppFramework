#!@perl@
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";
use GUS::Pipeline::ExternalResources::SftpManager;

my $location = $ARGV[0];

die "usage: testSftp hostname:rootDir\n" unless $location;

my $sftp = GUS::Pipeline::ExternalResources::SftpManager->new($location);

my ($user, $host,$root) = GUS::Pipeline::ExternalResources::SftpManager::parseLocation($location);

my $test = 1;
print "Test $test: list dir\n";
my @list = $sftp->listDir("");
if (@list) { 
  print "passed\n\n";
} else {
  print "failed: didn't get a list back\n\n";
}

$test++;
print "Test $test: file non-existence\n";
my $existsFile = "i_dont_exist";
if ($sftp->fileExists($existsFile)) {
  die "failed: shouldn't have thought $existsFile exists in $root\n\n";
} else { 
  print "passed\n\n";
}

$test++;
print "Test $test: putting a file and file existence\n";
my $remoteTargetFile = "put_" . time();
if ($sftp->fileExists($remoteTargetFile)) {
  die "Can't do Test $test because target file $root/$remoteTargetFile already exists on $host\n";
}
my $fileToPut = "/tmp/junk_" . time();
`echo blah > $fileToPut`;
-e $fileToPut || die "Can't make local file $fileToPut\n";
$sftp->copyIn($fileToPut, $remoteTargetFile);
`rm $fileToPut`;
if ($sftp->fileExists($remoteTargetFile)) {
  print "passed\n\n";
} else { 
  print "failed: can't find file $root/$remoteTargetFile on $host\n\n"
}

$test++;
print "Test $test: getting a file\n";
my $fileToGet = "get_" . time();
$sftp->copyOut($remoteTargetFile, $fileToGet);
if (-e $fileToGet) {
  print "passed\n\n";
} else { 
  print "failed: can't find file $fileToGet\n\n"
}


$test++;
print "Test $test: make dir and dir existence\n";
my $dirToMake = "mkdir_" . time();
$sftp->makeDir($dirToMake);
if ($sftp->dirExists($dirToMake)) { 
  print "passed\n\n";
} else { 
  print "failed: didn't find $root/$dirToMake on $host\n\n";
}


$test++;
print "Test $test: delete a file\n";
$sftp->deleteFile($remoteTargetFile);
if ($sftp->fileExists($remoteTargetFile)) {
  print "failed: didn't delete $root/$remoteTargetFile on $host\n\n"
} else { 
  print "passed\n\n";
}

$test++;
print "Test $test: touching a file\n";
my $touchFile = "touch_" . time();
$sftp->touchFile($touchFile);
if (!$sftp->fileExists($touchFile)) {
  print "failed: couldn't touch $root/$touchFile on $host\n\n"
} else { 
  print "passed\n\n";
}

