#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";

use GUS::Workflow::WorkflowStepInvoker;

usage() unless scalar(@ARGV) >= 5;

my $i = 0;
my $homeDir = $ARGV[$i++];
my $workflowId = $ARGV[$i++];
my $stepName = $ARGV[$i++];
my $invokerClass = $ARGV[$i++];
my $errFile =  $ARGV[$i++];
my $mode = $ARGV[$i++];
my @paramStrings = @ARGV[$i..$#ARGV];

open (STDERR, ">>$errFile");
print STDERR "\n\n================== " . localtime() . " ====================\n";
print STDERR "running wrapper command: $0 " . join(" ", @ARGV) . "\n";

my $invoker = GUS::Workflow::WorkflowStepInvoker->new($homeDir);

$invoker->setRunningState($workflowId, $stepName);

my $stepInvoker =  $invoker->getStepInvoker($invokerClass, $homeDir);

$stepInvoker->setParamValues(\@paramStrings);

my $status = $stepInvoker->runInWrapper($workflowId, $stepName, $mode, $invokerClass);

exit($status);

sub usage {
    print "
Caution!! this program is only called by the workflow controller

usage: workflowstepwrap workflow_dir workflow_id stepname stepclass errfile [run|test] param1name=param1value ...
";
    exit(1);
}




