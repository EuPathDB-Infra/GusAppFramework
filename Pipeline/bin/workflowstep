#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";

use strict;
use GUS::Pipeline::Workflow::Workflow;

# these should be imported from someplace, not duplicated here
my $READY = 'READY';      # my parents are not done yet  -- default state
my $ON_DECK = 'ON_DECK';  # my parents are done, but there is no slot for me
my $DO_NOT_RUN = 'DO_NOT_RUN';  # pilot doesn't want this step to start
my $FAILED = 'FAILED';
my $DONE = 'DONE';

my $stepName = $ARGV[0];
my $metaConfigFile = $ARGV[1];
my $state = $ARGV[2];

&usage unless scalar($ARGV) == 3;

my $workflow = GUS::Pipeline::Workflow::Workflow->new($metaConfigFile);

my $step = workflow->getStep($stepName);

usage() unless grep(/$state/, $READY, $FAILED, $DO_NOT_RUN);
$step->forceState($state);

sub usage {
    print "
usage: workflowstep stepname metaconfigfile state

allowed states are:
  READY 
  FAILED
  DO_NOT_RUN

allowed transitions are:
  DO_NOT_RUN --> READY
  FAILED     --> READY
  RUNNING    --> FAILED
  READY      --> DO_NOT_RUN
  ON_DECK    --> DO_NOT_RUN
";
    exit(1);
}




