<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY __copyright__e8xhmm08 SYSTEM "../pieces/copyright.xml">
<!ENTITY __legalnotice__e8xhm3n9 SYSTEM "../pieces/legalnotice.xml">
]>
<book>
  <title>GUS Installation Guide</title>

  <bookinfo>
    <date>$Date$</date>

    <releaseinfo>$Id: UsersGuide.xml,v 1.1.2.1 2005/05/05 20:18:59 msaffitz
    Exp $</releaseinfo>

    <author>
      <surname>Saffitz</surname>

      <firstname>Michael</firstname>

      <email>msaffitz@pcbi.upenn.edu</email>
    </author>

  </bookinfo>

  <chapter>
    <title>GUS Overview</title>

    <sect1 id="Overview">
      <title>GUS Overview</title>

      <para>This is a brief introduction to GUS</para>
    </sect1>

    <sect1 id="Project">
      <title>GUS Project</title>

      <para>Overview of GUS Project</para>
    </sect1>
  </chapter>

  <chapter>
    <title>Installing GUS</title>

    <important>
      <para>Before installing GUS, you should read and fully understand the
      GUS architecture and its various components. See <xref
      linkend="Overview" /></para>
    </important>

    <sect1>
      <title>System Requirements</title>

      <sect2>
        <title>Hardware</title>

        <para>While the GUS Application framework has primarily been developed
        on Linux, it should in principle run on any UNIX-based operating
        system, including Mac OS X, provided the software requirements below
        can be satisfied.</para>

        <note>
          <para>Users have reported difficulty running GUS on Solaris.</para>
        </note>

        <para>As noted below, GUS requires the use of either Oracle or
        PostgreSQL as a relational database management system (RDBMS).
        PostgreSQL support is much more recent, and as such, Oracle is
        recommended whenever practical. For installations with more than 3-5GB
        of data, Oracle is highly recommended. PostgreSQL, however, is an open
        source and freely available database system, and thus makes an
        attractive option for smaller GUS installations, or where Oracle is
        not economical. The choice of an RDBMS will affect your system and
        hardware requirements. Refer to you RDBMS's documentation for further
        details and specific requirements.</para>

        <para>GUS's hardware requirements depend largely on the size and
        complexity of the data you intend to load and analyze using GUS. Most
        installations will have a separate server for the database management
        system, for which you should refer to your RDBMS's documentation for
        requirements. For the GUS Application framework, any modern desktop PC
        satisfying the above architecture requirements should suffice. A
        2.4Ghz Pentium with 512MB of RAM (or equivalent machine) would serve
        as a good basic machine. For parsing large datafiles, a 3.2Ghz Pentium
        with as much as 4GB of RAM may be more appropriate. For guidance
        specific to your situation, refer to the mailing list archives or post
        a new message to the list (see <xref linkend="Project" /> for more
        details on GUS Resources).</para>
      </sect2>

      <sect2>
        <title>Software</title>

        <para>GUS requires the following third party software packages:</para>

        <itemizedlist>
          <listitem>
            <para>Perl 5.8.1 or above (<ulink
            url="http://www.perl.com">www.perl.com</ulink>)</para>
          </listitem>

          <listitem>
            <para>Perl Modules: DBI, DBI-Oracle and/or DB-Pg, Parse-Yapp,
            XML-Simple, and XML-Parser or XML-SAX</para>
          </listitem>

          <listitem>
            <para>Java 1.4.2 or above, including the SDK (<ulink
            url="http://java.sun.com">java.sun.com</ulink>)</para>
          </listitem>

          <listitem>
            <para>Oracle 9i or above (<ulink
            url="http://www.oracle.com">www.oracle.com</ulink>) <emphasis>or
            </emphasis>PostgresSQL 7.4 or above (<ulink
            url="http://www.postgresql.org">www.postgresql.org</ulink>)</para>
          </listitem>

          <listitem>
            <para>Apache Ant 1.6.2 or above (<ulink
            url="http://ant.apache.org">ant.apache.org</ulink>)</para>
          </listitem>
        </itemizedlist>
      </sect2>

      <sect2>
        <title>Preparing the RDBMS System</title>

        <note>
          <para>If the GUS Schema has already been installed, you may skip
          this step and proceed directly to <xref
          linkend="DownloadGUS" /></para>
        </note>

        <para>Once you've satisfied the above software requirements and
        installed and configured your database system, you should create or
        identify an existing database to install GUS into. As part of this
        process, more advanced users of GUS may consider tuning various
        database settings such as a data block size and memory allocations, as
        well as custom tablespace creation. Many of these settings will vary
        greatly depending on your usage of GUS and database system; refer to
        your RDBMS's documentation for further details and options.</para>

        <para>Once the database to hold GUS has been created and configured,
        you must create or identify a user that the GUS installer will use to
        install the GUS Schema. When using Oracle, this user should be granted
        the <computeroutput>create session</computeroutput> and
        <computeroutput>dba</computeroutput> privileges for the duration of
        the install (after installation these privileges may be revoked). For
        PostgreSQL, it is recommended that this user be the owner of the
        database or be granted all privileges on all objects within the
        database. For both database systems, the installer will connect as
        this user, and as this user create the necessary schemata, tables,
        sequences, indexes, constraints, and the other objects that comprise
        GUS.</para>
      </sect2>
    </sect1>

    <sect1>
      <title id="DownloadGUS">Downloading GUS</title>

      <para>The most recent release of GUS is available from the GUS Project
      website (<ulink url="http://www.gusdb.org">www.gusdb.org</ulink>) as a
      single distributable. From time to time, the GUS Project website may
      also provide less stable development releases of GUS as a single
      distributable. In addition, the GUS CVS repository is available for
      "bleeding edge" releases.<warning>
          <para>Since the 3.5 release of GUS, CVS is no longer the preferred
          or recommended method for downloading GUS. The CVS repository
          contains the most recent additions and changes to GUS, which may be
          inconsistent with this and other documentation, and which may
          include changed APIs that could cause data loss.</para>
        </warning></para>

      <para>Once downloaded, the GUS distribution should be moved to the
      location of your preference, and expanded:<screen>$ tar -zxvf gus-x.x.x.tar.gz</screen><note>
          <para>Throughout this documentation, the dollar
          (<computeroutput>$</computeroutput>) symbol will be used at the
          begining of a line to denote the shell prompt. You should not type
          the dollar symbol as part of your input.</para>
        </note></para>
    </sect1>

    <sect1>
      <title>Configuring and Preparing GUS</title>

      <para>Once you have downloaded and expanded the GUS distribution, you
      must configure your environment. These settings are required for all
      uses of GUS, and as such is it highly recommended that you add them in
      such a manner that they be set upon creating a new session (i.e. in your
      <computeroutput>.bash_profile</computeroutput> file). The following
      examples are for the Bash shell, and assume you have expanded the GUS
      distribution in the directory
      <computeroutput>/home/smith</computeroutput>:<example>
          <title>Configuring the Environment for GUS</title>

          <screen>$ export GUS_HOME=/home/smith/GUS/home
$ export PROJECT_HOME=/home/smith/GUS/src
$ export GUS_CONFIG_FILE=/home/smith/GUS/gus.properties
$ export PERL5LIB=$GUS_HOME/lib/perl
$ export PATH=$GUS_HOME/bin:$PROJECT_HOME/install/bin:$PATH</screen>
        </example><note>
          <para>Throughout the rest of this document,
          <computeroutput>$GUS_HOME</computeroutput>,
          <computeroutput>$PROJECT_HOME</computeroutput>, and
          <computeroutput>$GUS_CONFIG_FILE</computeroutput> will frequently be
          used to refer to the locations specified above.</para>
        </note></para>

      <para>After your environment has been configured for GUS, you must
      configure the GUS software itself. First, copy the
      <computeroutput>$PROJECT_HOME/install/gus.config.sample</computeroutput>
      file to
      <computeroutput>$PROJECT_HOME/install/gus.config</computeroutput>. Once
      copied, you must open this file and provide the necessary
      values:<example>
          <title>Configuring <computeroutput>gus.config</computeroutput>
          file</title>

          <screen>dbVendor=<replaceable>Oracle_or_Postgres</replaceable><co
              id="dbVendor" />
dbiDsn=<replaceable>perl_dbi_string</replaceable><co id="dbiDsn" />
jdbcDsn=<replaceable>jdbc_conection_string</replaceable>
databaseLogin=<replaceable>database_username</replaceable><co
              id="databaseLogin" />
databasePassword=<replaceable>database_password</replaceable>
userName=<replaceable>gus_username</replaceable><co id="userName" />
group=<replaceable>gus_password</replaceable>
project=<replaceable>primary_gus_project</replaceable>
perl=<replaceable>path_to_perl_binary</replaceable><co id="perl" />
md5sum=<replaceable>path_to_md5_or_md5sum_binary</replaceable><co id="md5sum" /></screen>
        </example><calloutlist>
          <callout arearefs="dbVendor">
            <para>The database system you are using. This must be either
            <computeroutput>Oracle</computeroutput> or
            <computeroutput>Postgres</computeroutput>. </para>
          </callout>

          <callout arearefs="dbiDsn">
            <para><computeroutput>dbiDsn</computeroutput> is the Perl DBI
            string for your database. For example,
            <computeroutput>dbi:Oracle:mygus</computeroutput>.</para>

            <para><computeroutput>jdbcDsn</computeroutput> is the JDBC string
            for your database. For example,
            <computeroutput>jdbc:oracle:thin:@myserver:1521:mygus</computeroutput>.</para>
          </callout>

          <callout arearefs="databaseLogin">
            <para><computeroutput>databaseLogin</computeroutput> and
            <computeroutput>databasePassword</computeroutput> are the username
            and password that the software will use to connect to your
            database.</para>
          </callout>

          <callout arearefs="userName">
            <para><computeroutput>username</computeroutput>,
            <computeroutput>group</computeroutput>, and
            <computeroutput>project</computeroutput> are used within the GUS
            system for auditing and permissions purposes. For now, use
            <computeroutput>dba</computeroutput> as the
            <computeroutput>userName</computeroutput> and
            <computeroutput>group</computeroutput> and
            <computeroutput>Database administration</computeroutput> as the
            project. See the GUS User's Guide for more information about these
            settings.</para>
          </callout>

          <callout arearefs="perl">
            <para><computeroutput>perl</computeroutput> is the full path to
            your Perl executable.</para>
          </callout>

          <callout arearefs="md5sum">
            <para><computeroutput>md5sum</computeroutput> is the full path to
            your <computeroutput>md5sum</computeroutput> or
            <computeroutput>md5</computeroutput> executable. </para>
          </callout>
        </calloutlist></para>

      <caution>
        <para>Since GUS 3.5 the
        <computeroutput>gus.properties</computeroutput>,
        <computeroutput>install.prop</computeroutput>,
        <computeroutput>schema.prop</computeroutput> and other various
        configuration files are automatically created using the values
        specified in the <computeroutput>gus.config</computeroutput> file. All
        of these files, except the gus.properties file, will be overwritten by
        the GUS installer whenever it us run. <emphasis>The gus.properties
        file will never be overwritten by the GUS installer. Care should be
        taken to understand at all times what values are specified in the
        gus.properties file as it determines the database the the GUS system
        will access.</emphasis></para>
      </caution>
    </sect1>

    <sect1>
      <title>Installing GUS</title>

      <para>You are now ready to install the GUS Schema and/or Application
      Framework. The Schema should only be installed once per GUS
      instance/database and most commonly will be shared by many users (each
      with thier own installation of the Application Framework). To install
      <emphasis>both</emphasis> the Schema and Application Framework, use the
      following command:</para>

      <screen>$ build GUS install -append -installDBSchema</screen>

      <para>If the Schema has already been installed, you should instead use
      the following command: </para>

      <screen>$ build GUS install -append</screen>

      <para>The install process should take 5-30 minutes to complete,
      depending on the speed of your system, your RDBMS, and the specific
      tasks required for your environment. When complete, you will see the
      following on your screen:</para>

      <screen>     [echo] Installation Complete</screen>

      <note>
        <para>You may at some point see <computeroutput>[concat] No existing
        files and no nested text, doing nothing</computeroutput> as part of
        the install process. This is a normal message and does not indicate
        that an error has occured. </para>
      </note>
    </sect1>

    <sect1>
      <title>Post-Installation Setup</title>

      <para>If you installed the GUS Schema in the previous step, you must now
      address the issues in this section. If you only installed the
      Application Framework, you may skip this section.</para>

      <sect2>
        <title>Database Privileges and Roles</title>

        <para>The GUS Application Framework includes support for using basic
        access permissions with a unix-based model of users, groups, and
        "others" and thourgh the use of "projects". These permissions are not
        meant as a robust solution to data security, and are easily
        circumvented though use of direct database acess (i.e.
        <computeroutput>sqlplus</computeroutput> or
        <computeroutput>psql</computeroutput>) or local modifications of the
        GUS Application Framework. As such, it is highly recommended that you
        carefully evaluate and implement a database-level privileges system
        that makes sense to your confguration. Groups that need the highest
        levels of security, including HIPAA compliance, should consider using
        Oracle with the Virtual Private Database option and other RDBMS-based
        technologies.</para>

        <para>As an example, the Computational Biology and Informatics
        Labarotory (CBIL) uses a privilege system that is based on two roles,
        a read-only role, <computeroutput>GUS_R</computeroutput>, and a write
        role, <computeroutput>GUS_W</computeroutput>.
        <computeroutput>GUS_R</computeroutput> has been granted the
        <computeroutput>select</computeroutput> privilege on all tables and
        views in GUS, and <computeroutput>GUS_W</computeroutput> has been
        granted the <computeroutput>update, insert, delete</computeroutput>
        privileges on all tables and views and
        <computeroutput>select</computeroutput> on all sequences in GUS.
        Individual databases users are then granted the
        <computeroutput>GUS_R</computeroutput> role and, as appropriate, the
        <computeroutput>GUS_W</computeroutput> role. For finer control, this
        model may be extended to individual schemata or sets of tables.</para>
      </sect2>

      <sect2>
        <title>Registering the GUS Application Framework</title>

        <para>For auditing purposes, the GUS system requires that the
        Application Framework and individual plugins be registered within the
        GUS Schema. To register the Application Framework in the GUS Schema,
        use the following command:</para>

        <screen>$ ga +meta --commit</screen>

        <para>It is only necessary to run this command once. Upon successfully
        running the command, you will see a stream of XML displayed on your
        screen.</para>

        <para>Plugins will need to be registered in a similar fashion prior to
        use. For more information on registering plugins, please refer to the
        GUS User's Guide.</para>
      </sect2>

      <sect2>
        <title>Creating users, groups, and projects</title>

        <para>You may have noticed the
        <computeroutput>userName</computeroutput>,
        <computeroutput>group</computeroutput>, and
        <computeroutput>project</computeroutput> options specified in the
        <computeroutput>gus.config</computeroutput> file above. These values
        are used for auditing changes to the database on an individual row
        level, as well as part of the permissions system built into the GUS
        Application Framework. Your instance of GUS should now be configured
        with the standard "DBA" entries. You may at this point wish to create
        more specific users, groups, and projects so that further work with
        GUS will be properly tracked.</para>

        <para>For more information on creating users, groups, and projects
        within GUS, please refer to the GUS User's Guide.</para>
      </sect2>
    </sect1>

    <sect1>
      <title>Reinstallating the GUS Application Framework</title>

      <para>From time to time it may be necessary to reinstall the GUS
      application framework, either as part of an upgrade, or to propogate
      changes you've made within the
      <computeroutput>$PROJECT_HOME</computeroutput> directory to the
      <computeroutput>$GUS_HOME</computeroutput> directory. If you wish to
      force all objects to be rebuilt (for example, due to a change within the
      schema), you should first run the command:</para>

      <screen>$ touch $PROJECT_HOME/Schema/gus_schema.xml</screen>

      <para>To reinstall the GUS application framework, simply run the build
      command:</para>

      <screen>$ build GUS install -append</screen>
    </sect1>

    <sect1>
      <title>Troubleshooting the Install Process</title>

      <sect2>
        <title>Cleaning up after a failed installation</title>

        <para></para>
      </sect2>
    </sect1>
  </chapter>
</book>