package edu.upenn.cbil.limpopo.model;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.commons.lang.builder.ReflectionToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import edu.upenn.cbil.limpopo.utils.AppUtils;
import edu.upenn.cbil.limpopo.utils.ListUtils;
import uk.ac.ebi.arrayexpress2.magetab.datamodel.IDF;
import uk.ac.ebi.arrayexpress2.magetab.exception.ConversionException;


/**
 * Represents the information for an Experimental Design in the IDF.  This class is
 * intended as a convenience class to be used when converting a MAGE-TAB into another format.  It
 * is expected that one of more of these objects will be associated with an IDF.
 * @author Cris Lawrence
 */
public class StudyDesign {
  public static Logger logger = LoggerFactory.getLogger(StudyDesign.class);
  private boolean addition;
  private OntologyTerm type;
  
  public StudyDesign() {
  }
  
  public final boolean isAddition() {
    return addition;
  }

  public final void setAddition(boolean addition) {
    this.addition = addition;    
  }

  /**
   * Ontology term for Experimental Design Term Source REF headers.  For use in performing conversions.
   * @return - type - a required ontology term for the experimental design type.
   */
  public OntologyTerm getType() {
    return type;
  }
  
  /**
   * Ontology term for Experimental Design Term Source REF headers.  For use in populating the study object.
   * @param type - a required ontology term for the experimental design type.
   */
  public void setType(OntologyTerm type) {
	this.type = type;
  }
  
  /**
   * @return - a complete representation of the study using
   *           ReflectionToStringBuilder for debugging purposes.
   */
  @Override
  public String toString() {
    return new ReflectionToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE).toString();
  }
  
  /**
   * Populates a list of study designs using the data from the IDF portion of a MAGE-TAB and using the IDF object generated by the underlying
   * limpopo software.  
   * @param data - the limpopo IDF object
   * @return - a list of populated study designs
   * @throws ConversionException - if a problem occurs while generating an ontology term for the investigation accession.
   */
  public static List<StudyDesign> populate(IDF data) throws ConversionException {
	logger.debug("START: Populating Study Design");
    List<StudyDesign> studyDesigns = new ArrayList<>();
    Iterator<String> iterator = data.experimentalDesign.iterator();
    int i = 0;
    while(iterator.hasNext()) {
      StudyDesign studyDesign = new StudyDesign();
      String sourceTermRef = ListUtils.get(data.experimentalDesignTermSourceREF, i);
      studyDesign.setAddition(AppUtils.checkForAddition(sourceTermRef));
      studyDesign.setType(new OntologyTerm(iterator.next(), sourceTermRef));
      studyDesigns.add(studyDesign);
      i++;
    }
    logger.debug("END: Populating Study Design");
    return studyDesigns;
  }

}
