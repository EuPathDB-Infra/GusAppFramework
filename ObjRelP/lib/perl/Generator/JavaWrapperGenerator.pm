package GUS::ObjRelP::Generator::JavaWrapperGenerator;

@ISA = qw (GUS::ObjRelP::Generator::WrapperGenerator);

use strict;

sub new{
    my ($class, $generator, $schemaName, $tableName, $tableGenerator) = @_;
    
    my $self=GUS::ObjRelP::Generator::WrapperGenerator->new($generator, $schemaName, $tableName, $tableGenerator);
    bless $self, $class;
    
    $self->{modelPackagePrefix} = "org.gusdb.model";
    $self->{objreljPackagePrefix} = "org.gusdb.objrelj";
    
    return $self;
}

sub generate{

    my($self, $newOnly) = @_;
    
    my $dir = $self->{generator}->{targetDir};
    
    my $file = "$dir/$self->{schemaName}/$self->{tableName}.java";
    
    return if ($newOnly && -e $file);
    
    	open(F,">$file") || die "Can't open file $file for writing";
	print F $self->_genHeader() . $self->_genConstructor() . "\n\n } \n " ;
	close(F);
}

sub _genHeader {
    
    my ($self) = @_;
    my $modelPackagePrefix = $self->{modelPackagePrefix};
    
    
    my $output = ""; 
    

    $output .= "package $modelPackagePrefix." . $self->{schemaName} . ";\n\n";
    $output .= "

/* THIS CLASS HAS BEEN AUTOMATICALLY GENERATED BY THE GUS::ObjRelP::Generator 
 PACKAGE.

 DO NOT EDIT!!

 TO ADD FUNCTIONALITY MANUALLY, COPY THIS FILE TO hand_edited/$self->{schemaName}/$self->{tableName}.java.man
 (or edit that file if it already exists) AND ADD THE FUNCTIONALITY THERE.
 THEN RE-GENERATE THE GUS OBJECTS. */ \n\n ";


    $output .= "import java.sql.*;\n\n"; 
    $output .= "import java.util.*;\n\n";
    $output .= "import java.math.*;\n\n";
    $output .= "import java.util.Date;\n\n";
    $output .= "import $modelPackagePrefix." . $self->{schemaName} . "." . $self->{tableName} . "_Row;\n";
    return $output;
}

sub _genConstructor {
    my ($self) = @_;
    my $output = "";
    
    my $name = $self->{tableName};

    $output .= "public class $name extends $name"."_Row implements java.io.Serializable{\n\n";
    $output .= "public $name () {   } \n\n";
    $output .= "public $name (String owner, String name) { \n ";
    $output .= "super (owner, name);\n";
    $output .= "}\n\n";

    return $output;
}



1;
